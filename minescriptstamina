local player = game.Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")
local UserInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera

local toggle = false

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.K then
        toggle = not toggle
    end
end)

local startPos = Vector3.new(-176, 4, 81)

local waypoints = {
    Vector3.new(-162, 4, 37),
    Vector3.new(-163, 4, -33),
    Vector3.new(-162, 4, -104),
    Vector3.new(-125, 4, -34),
    Vector3.new(-124, 4, -208),
    Vector3.new(-162, 4, -209),
    Vector3.new(-20, 4, -209),
    Vector3.new(-345, 4, -209),
    Vector3.new(-543, 4, -208),
    Vector3.new(-19, -17, -281),
    Vector3.new(-650, -18, -281),
    Vector3.new(-650, -18, 2),
    Vector3.new(-555, 4, -183),
    Vector3.new(-554, 4, 3),
    Vector3.new(-464, 4, 3),
    Vector3.new(-461, 4, 4),
    Vector3.new(-294, 4, 4),
    Vector3.new(-161, 4, 5),
    Vector3.new(-161, 4, 39),
}

local function walkTo(humanoid, targetPos)
    humanoid:MoveTo(targetPos)
    humanoid.MoveToFinished:Wait()
    task.wait(math.random(30, 70) / 100) -- nghỉ 0.3–0.7s sau khi tới nơi
end

while true do
    if toggle then
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local humanoid = character:WaitForChild("Humanoid")
        local targetMesh = game.Workspace.Debris.TrainingModels.RoadworkClock:FindFirstChild("Mesh")

        humanoidRootPart.CFrame = CFrame.new(startPos)
        task.wait(0.5)

        if targetMesh and targetMesh:IsA("BasePart") then
            camera.CameraType = Enum.CameraType.Scriptable
            local meshPos = targetMesh.Position
            local camOffsets = {
                Vector3.new(0, 10, -10),
                Vector3.new(10, 8, 0),
                Vector3.new(-10, 8, 0),
            }
            for _, offset in ipairs(camOffsets) do
                camera.CFrame = CFrame.new(meshPos + offset, meshPos)
                task.wait(0.3)
            end
            camera.CameraType = Enum.CameraType.Custom
        end

        for i = 1, 2 do
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.T, false, game)
            task.wait(0.2)
        end
        task.wait(1)

        for _, wp in ipairs(waypoints) do
            walkTo(humanoid, wp)

            if wp.X == -162 and wp.Y == 4 and wp.Z == 37 then
                for i = 1, 2 do
                    humanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 2, 0)
                    wait(0.7)
                    humanoidRootPart.CFrame = humanoidRootPart.CFrame - Vector3.new(0, 2, 0)
                    wait(0.7)
                end
            end
        end

        for i = 1, 2 do
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.T, false, game)
            task.wait(0.2)
        end
        task.wait(1)
    else
        wait(0.1)
    end
end
