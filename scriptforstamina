local player = game.Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")
local camera = workspace.CurrentCamera

while true do
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local targetMesh = game.Workspace.Debris.TrainingModels.RoadworkClock:FindFirstChild("Mesh")

    if targetMesh and targetMesh:IsA("BasePart") then
        local targetPosition = targetMesh.Position
        humanoidRootPart.CFrame = CFrame.new(targetPosition)

        camera.CameraType = Enum.CameraType.Scriptable
        local camOffset = Vector3.new(0, 10, 0)
        camera.CFrame = CFrame.new(humanoidRootPart.Position + camOffset, humanoidRootPart.Position)

        wait(1)
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.T, false, game)
        wait(2)

        humanoidRootPart.CFrame = CFrame.new(-162, 4, 37)

        for i = 1, 2 do
            wait(0.5)
            humanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 2, 0)
            wait(0.5)
            humanoidRootPart.CFrame = humanoidRootPart.CFrame - Vector3.new(0, 2, 0)
        end

        wait(1)
        character:BreakJoints()
        wait(3)
    else
        wait(2)
    end
end
